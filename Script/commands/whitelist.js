const fs = require("fs");
const configPath = "./cyber.json"; // Mirai Bot-‡¶è‡¶∞ config ‡¶´‡¶æ‡¶á‡¶≤‡ßá‡¶∞ ‡¶™‡¶•
const config = JSON.parse(fs.readFileSync(configPath, "utf8"));

module.exports.config = {
    name: "whitelist",
    version: "1.0",
    hasPermission: 2,
    credits: "Modified for Mirai Bot",
    description: "Manage bot whitelist users",
    commandCategory: "admin",
    usages: "[add/remove/list/on/off] <uid>",
    cooldowns: 5
};

module.exports.run = async ({ event, args, api }) => {
    if (!config.whitelist) {
        config.whitelist = { enabled: false, users: [] };
    }

    switch (args[0]) {
        case "add": {
            if (!args[1]) return api.sendMessage("‚ö† ‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶Ü‡¶á‡¶°‡¶ø ‡¶™‡ßç‡¶∞‡¶¶‡¶æ‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®!", event.threadID);
            const uid = args[1];
            if (config.whitelist.users.includes(uid)) {
                return api.sendMessage("‚ö† ‡¶è‡¶á ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶á‡¶§‡ßã‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá whitelist-‡¶è ‡¶Ü‡¶õ‡ßá!", event.threadID);
            }
            config.whitelist.users.push(uid);
            fs.writeFileSync(configPath, JSON.stringify(config, null, 2));
            return api.sendMessage(`‚úÖ ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ${uid} ‡¶ï‡ßá whitelist-‡¶è ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá!`, event.threadID);
        }

        case "remove": {
            if (!args[1]) return api.sendMessage("‚ö† ‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶Ü‡¶á‡¶°‡¶ø ‡¶™‡ßç‡¶∞‡¶¶‡¶æ‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®!", event.threadID);
            const uid = args[1];
            config.whitelist.users = config.whitelist.users.filter(id => id !== uid);
            fs.writeFileSync(configPath, JSON.stringify(config, null, 2));
            return api.sendMessage(`‚úÖ ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ${uid} ‡¶ï‡ßá whitelist ‡¶•‡ßá‡¶ï‡ßá ‡¶∏‡¶∞‡¶æ‡¶®‡ßã ‡¶π‡ßü‡ßá‡¶õ‡ßá!`, event.threadID);
        }

        case "list": {
            if (config.whitelist.users.length === 0) return api.sendMessage("‚ö† ‡¶ï‡ßã‡¶®‡ßã ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ whitelist-‡¶è ‡¶®‡ßá‡¶á!", event.threadID);
            return api.sendMessage("üëë Whitelist ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ:\n" + config.whitelist.users.join("\n"), event.threadID);
        }

        case "on": {
            config.whitelist.enabled = true;
            fs.writeFileSync(configPath, JSON.stringify(config, null, 2));
            return api.sendMessage("‚úÖ Whitelist ‡¶Æ‡ßã‡¶° ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá!", event.threadID);
        }

        case "off": {
            config.whitelist.enabled = false;
            fs.writeFileSync(configPath, JSON.stringify(config, null, 2));
            return api.sendMessage("‚úÖ Whitelist ‡¶Æ‡ßã‡¶° ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá!", event.threadID);
        }

        default:
            return api.sendMessage("‚ö† ‡¶∏‡¶†‡¶ø‡¶ï ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®: add/remove/list/on/off", event.threadID);
    }
};
